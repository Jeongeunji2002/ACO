--system
DROP USER C##ACO CASCADE;
CREATE USER C##ACO IDENTIFIED BY admin;
GRANT CONNECT, RESOURCE TO "C##ACO";

--aco
CREATE TABLE mem (
    UserId INT PRIMARY KEY,
    UserSetting VARCHAR(255)
);

CREATE TABLE UserPreferences (
    PreferenceId INT PRIMARY KEY,
    UserId INT,
    Formality VARCHAR(50),
    Friendly VARCHAR(50),
    Playfulness VARCHAR(50),
    FOREIGN KEY (UserId) REFERENCES mem(UserId)
);

CREATE TABLE UserFeedbacks (
    FeedbackId INT PRIMARY KEY,
    UserId INT,
    AverageScore FLOAT,
    FOREIGN KEY (UserId) REFERENCES mem(UserId)
);

CREATE TABLE ActivityLogs (
    LogId INT PRIMARY KEY,
    UserId INT,
    ConversationCount INT,
    LastActiveDate DATE,
    FOREIGN KEY (UserId) REFERENCES mem(UserId)
);

CREATE TABLE UserAnalyses (
    AnalysisId INT PRIMARY KEY,
    UserId INT,
    Priority INT,
    Views INT,
    UsageStats VARCHAR(255),
    RecommendationsCount INT,
    DownloadsCount INT,
    FOREIGN KEY (UserId) REFERENCES mem(UserId)
);

CREATE TABLE ChatRecords (
    ChatId INT PRIMARY KEY,
    UserId INT,
    Title VARCHAR(255),
    Content VARCHAR(50),
    Response VARCHAR(50),
    ChatTime DATE,
    Topic VARCHAR(255),
    UserFeedback VARCHAR(255),
    EmotionAnalysis VARCHAR(255),
    FOREIGN KEY (UserId) REFERENCES mem(UserId)
);

CREATE TABLE Categories (
    CategoryId INT PRIMARY KEY,
    OriginalFile VARCHAR(255),
    AILearningData VARCHAR(50),
    FileFormat VARCHAR(50),
    Tags VARCHAR(50),
    VersionInfo VARCHAR(50),
    CopyrightInfo VARCHAR(255),
    RelatedItems VARCHAR(50)
);

CREATE TABLE UserSettings (
    SettingId INT PRIMARY KEY,
    UserId INT,
    NotificationSetting int,
    Location VARCHAR(255),
    RelatedLinks VARCHAR(255),
    StoragePath VARCHAR(255),
    ViewDate DATE,
    StartDate DATE,
    EndDate DATE,
    RelatedProjects VARCHAR(255),
    FOREIGN KEY (UserId) REFERENCES mem(UserId)
);

CREATE TABLE Filters (
    FilterId INT PRIMARY KEY,
    UserId INT,
    Profanity VARCHAR(50),
    Category VARCHAR(50),
    lev INT,
    FOREIGN KEY (UserId) REFERENCES mem(UserId)
);

CREATE TABLE messages (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50),
    message VARCHAR2(255),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


SELECT * FROM user_tables;
